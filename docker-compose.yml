version: '3.8'

services:
  # ---------------------------
  # PostgreSQL Database Service
  # ---------------------------
  db:
    image: postgres:16 # Använder officiella PostgreSQL 16 Docker-imagen
    ports:
      - "5432:5432" # Mappar host-port 5432 till container-port 5432
    environment:
      # Dessa miljövariabler används av den officiella PostgreSQL-imagen för initial inställning
      POSTGRES_DB: scandifit # Databasnamn
      POSTGRES_USER: scandifit_user # Användarnamn för databasen
      POSTGRES_PASSWORD: Rayan12345 # Lösenord för användaren
      # Optional: Set timezone for PostgreSQL
      TZ: 'Europe/Stockholm'
    volumes:
      # Beständig lagring för PostgreSQL-data
      - db_data:/var/lib/postgresql/data
      # Kopiera din init.sql (om du har en för Postgres)
      # - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  # ---------------------------
  # Flask Backend Service
  # ---------------------------
  backend:
    build: ./backend
    ports:
      - "8000:5000"
    environment:
      # Dessa variabler skickas till Flask-containern
      POSTGRES_HOST: db # Hostnamnet för databasen är tjänstenamnet 'db' inom Docker-nätverket
      POSTGRES_USER: scandifit_user
      POSTGRES_PASSWORD: Rayan12345 # Uppdaterat för att matcha POSTGRES_PASSWORD ovan
      POSTGRES_DB: scandifit # Uppdaterat för att matcha POSTGRES_DB ovan
      FLASK_ENV: production
      # SECRET_KEY: your_flask_secret_key
    depends_on:
      - db
    restart: unless-stopped

  # ---------------------------
  # React Frontend Service
  # ---------------------------
  frontend:
    build:
      context: ./frontend
      args:
        REACT_APP_API_URL: http://backend:5000
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped

# ---------------------------
# Docker Volumes
# ---------------------------
volumes:
  db_data: